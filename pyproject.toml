[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "deep-research"
version = "1.0.0"
description = "Advanced web crawling and research tool with recursive link following"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Deep Research Team", email = "research@example.com"}
]
maintainers = [
    {name = "Deep Research Team", email = "research@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Researchers", 
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Utilities",
]
keywords = [
    "research", "web-crawling", "web-scraping", "duckduckgo",
    "search", "analysis", "pdf-generation", "cli", "automation"
]
requires-python = ">=3.8"
dependencies = [
    "rich>=13.0.0",
    "click>=8.0.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.7.0",
    "duckduckgo-search>=3.9.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "reportlab>=4.0.0",
    "fpdf2>=2.7.0",
    "pdfplumber>=0.11.0",
    "python-docx>=1.1.0",
    "markdown>=3.5.0",
    "urllib3>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
full = [
    "streamlit>=1.28.0",
    "gradio",
    "jupyter>=1.1.0",
    "ipykernel>=6.29.0",
    "ipywidgets>=8.1.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "scikit-learn>=1.3.0",
    "selenium>=4.15.0",
    "scrapy>=2.11.0",
]
ai = [
    "mlx>=0.21.0",
    "mlx-lm>=0.19.0",
    "huggingface-hub>=0.26.0",
    "transformers>=4.47.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/deep-research"
Repository = "https://github.com/yourusername/deep-research"
Documentation = "https://github.com/yourusername/deep-research#readme"
"Bug Reports" = "https://github.com/yourusername/deep-research/issues"
Changelog = "https://github.com/yourusername/deep-research/blob/main/CHANGELOG.md"

[project.scripts]
deep-research = "cli:main"
dr = "cli:main"

[tool.setuptools]
packages = ["deep_research"]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yaml", "*.yml"]

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["deep_research"]

# MyPy type checking
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=deep_research",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage configuration
[tool.coverage.run]
source = ["deep_research"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]